<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.match.dataassert.mapper.GroupTeamRelMapper">
  <resultMap id="BaseResultMap" type="org.match.dataassert.datadomain.GroupTeamRelDomain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uniname" jdbcType="CHAR" property="uniname" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="group_id_for_stage2" jdbcType="INTEGER" property="groupIdForStage2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uniname, group_id, team_id, group_id_for_stage2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_group_team_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_group_team_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.match.dataassert.datadomain.GroupTeamRelDomain" useGeneratedKeys="true">
    insert into t_group_team_rel (uniname, group_id, team_id, 
      group_id_for_stage2)
    values (#{uniname,jdbcType=CHAR}, #{groupId,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER}, 
      #{groupIdForStage2,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.match.dataassert.datadomain.GroupTeamRelDomain" useGeneratedKeys="true">
    insert into t_group_team_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uniname != null">
        uniname,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="groupIdForStage2 != null">
        group_id_for_stage2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uniname != null">
        #{uniname,jdbcType=CHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="groupIdForStage2 != null">
        #{groupIdForStage2,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.match.dataassert.datadomain.GroupTeamRelDomain">
    update t_group_team_rel
    <set>
      <if test="uniname != null">
        uniname = #{uniname,jdbcType=CHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="groupIdForStage2 != null">
        group_id_for_stage2 = #{groupIdForStage2,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.match.dataassert.datadomain.GroupTeamRelDomain">
    update t_group_team_rel
    set uniname = #{uniname,jdbcType=CHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      team_id = #{teamId,jdbcType=INTEGER},
      group_id_for_stage2 = #{groupIdForStage2,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="batchInsert" parameterType="map" >
    <!--@mbg.generated temp_config,-->
    insert into t_group_team_rel
    (uniname,group_id,team_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.uniname,jdbcType=CHAR},
      #{item.groupId,jdbcType=INTEGER},
      #{item.teamId,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>